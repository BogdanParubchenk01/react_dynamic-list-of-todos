{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","errorMessage","handleClick","selectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","filterChange","textChange","useState","text","setText","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","user","setUser","setErrorMessage","isLoading","setIsLoading","useEffect","fetchUser","a","responce","Error","message","href","email","name","App","setTodos","filterTodos","setFilterTodos","sortMethod","setSortMethod","applieQuery","setApplieQuery","iLoading","setSelectTodo","visibiliteComponent","setVisibiliteComponent","apllyQuery","useCallback","f","timerId","args","clearTimeout","debounce","newFilterTodos","filter","toLowerCase","includes","loadTodos","loadedTodos","methodSort","queryText","todoId","findTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ca84f5b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  errorMessage: string;\n  handleClick: (todoId: number) => void\n  selectTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  errorMessage,\n  handleClick,\n  selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {errorMessage\n        ? <li>{errorMessage}</li>\n        : todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(todo.id)}\n              >\n                <span className=\"icon\">\n                  {selectTodo && selectTodo.id === todo.id\n                    ? <i className=\"far fa-eye-slash\" />\n                    : <i className=\"far fa-eye\" />}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n    </tbody>\n  </table>\n);\n","import React, { useState } from 'react';\n\ntype Props = {\n  filterChange: (methodSort: string) => void;\n  textChange: (text: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ filterChange, textChange }) => {\n  const [text, setText] = useState('');\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    filterChange(event.target.value);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value);\n    textChange(event.target.value);\n  };\n\n  const handleClearSerch = () => {\n    setText('');\n    textChange('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={text}\n          onChange={handleSearchChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {text\n            && (\n              /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleClearSerch}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  handleClick: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, handleClick }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User | null>(null);\n  const [errorMessage, setErrorMessage] = useState<string>('User not found');\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const responce = await getUser(userId);\n\n        setUser(responce);\n        setIsLoading(false);\n      } catch (error) {\n        if (error instanceof Error) {\n          setErrorMessage(error.message);\n        }\n\n        setIsLoading(false);\n      }\n    };\n\n    fetchUser();\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n            {errorMessage !== 'User not found' || !user\n              ? <p>{errorMessage}</p>\n              : (\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n\n                  {' by '}\n\n                  <a href={`mailto:${user.email}`}>\n                    {user.name}\n                  </a>\n                </p>\n\n              )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nconst debounce = (f: (...args: string[]) => void, delay: number) => {\n  let timerId: NodeJS.Timeout;\n\n  return (...args: string[]) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(() => {\n      f(...args);\n    }, delay);\n  };\n};\n\nconst DEBOUNCE_DELAY = 1000;\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterTodos, setFilterTodos] = useState<Todo[]>([]);\n  const [sortMethod, setSortMethod] = useState('all');\n  const [applieQuery, setApplieQuery] = useState('');\n  const [iLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [selectTodo, setSelectTodo] = useState<Todo | null>(null);\n  const [visibiliteComponent, setVisibiliteComponent] = useState(false);\n\n  const apllyQuery = useCallback(\n    debounce(setApplieQuery, DEBOUNCE_DELAY),\n    [],\n  );\n\n  const handleFilterChange = (methodSort: string) => {\n    setSortMethod(methodSort);\n  };\n\n  const handleQueryText = (queryText: string) => {\n    apllyQuery(queryText);\n  };\n\n  useEffect(() => {\n    const newFilterTodos = todos.filter(todo => {\n      switch (sortMethod) {\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    }).filter(todo => {\n      return todo.title.toLowerCase().includes(applieQuery.toLowerCase());\n    });\n\n    setFilterTodos(newFilterTodos);\n  }, [todos, sortMethod, applieQuery]);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const loadedTodos = await getTodos();\n\n        setTodos(loadedTodos);\n        setFilterTodos(loadedTodos);\n        setIsLoading(false);\n      } catch (error) {\n        if (error instanceof Error) {\n          setErrorMessage(error.message);\n        }\n\n        setIsLoading(false);\n      }\n    };\n\n    loadTodos();\n  }, []);\n\n  const choiseTodo = (todoId: number) => {\n    setVisibiliteComponent(true);\n\n    const findTodo = todos.find(todo => todo.id === todoId);\n\n    if (findTodo) {\n      setSelectTodo(findTodo);\n    }\n  };\n\n  const closeTodo = () => {\n    setVisibiliteComponent(false);\n    setSelectTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterChange={handleFilterChange}\n                textChange={handleQueryText}\n              />\n            </div>\n\n            <div className=\"block\">\n              {iLoading && <Loader />}\n              <TodoList\n                errorMessage={errorMessage}\n                todos={filterTodos}\n                handleClick={choiseTodo}\n                selectTodo={selectTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {visibiliteComponent && selectTodo && <TodoModal todo={selectTodo} handleClick={closeTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}